Okay this problem was a little bit of a doosy. I think I was think of how clocks work wrong on the diagram. Dotted lines are one cycle but within each cycle the clock ticks of and on in each cycle. That half way point is to account for the propgation delay to go completely off before turning sending out the information on the end of the cycle/Start of the rising edge. I honestly didn't want to hand do it because that seemed more confusing to me so I sat down to learn how to simulate in JLS. Here is the guide to working my jls file. The first thing you want to do is check timings on everything . All the timings need to be an easily /2 number. I have it set to 2 just to figure out the problem. The issue with this its really hard to see and its not really easy to get the numbers not directly in th middle because every other 1 created signals and jls makes it hard to see (no zoom function). Okay now lets get into expanding the numbers. Right click on it then go to modify. All you have to worry about is the cycle time. That is a little missleading. Thats every half step that it will go off. Pick a time then click on both registers and make it the same number in change timings. While we are looking at the registers right click again and hit modify make sure its on pos-Trig. This is for it to register at the begining of the cycle it defaults to output when it level (not how dflops work). I didn't know this and caused me to have undefined behavior. That is why I kept getting the answer wrong. At the beginging it makes a big difference but it levels out the longer it goes on making it not as apparent and part of the reason why I got 86% on the first submission. Now since that is complete go to the && gate and not gate to change the timing to half the number you set for the clock. Our propigation delay should be good to go no we just have to input B for the simulation. This is where it starts to get a little complicated so hang with me. 

JLS has some very weird naming issues so in order for this to work properly your input has to start with Input followed by whatever you want to call it ex InputA, InputWireZero, etc. The other key componet is what is to the left of it. Its from the top row and two to the left it looks like two clocks stacked on top of each other. Click it and hit modify. It should pop up with a little text box.  This is where you can write a script to essentally do what B does in the graph The help tool on this actually is helpful documentation if needed (the one good thing jls does right). You start out the script by Typing your Input name. So B dips at 19 so times your clock number by 19. So UNTIL that time we want B to be 1 accorrding to the graph. So write 1 until (19x Clockspeed) The line then goes back up at 29 so we can just times (29-19 = 10) (10 x Clock Speed) Then write 0 For (10 X clock speed). All we have to do now is add 1 for some amount of time > 32 x clock speed the MOST IMPORTANT PART IS THAT YOU HAVE TO HAVE THE WORD "END" AT THE END OF THE STATMENT. 

Now we can simulator which is in the top left corner by file. This pops up a menu at the bottom of you screen. Before you do anything make your leap to whatever half your clock speed is this should show you each step the circut is making. Take my word on changing it too because I didn't know you could and had my timing super high so I was spamming 1 close to 300 times. Then you can just click step and it will increment by that amount in the leap. The advantage of using bigger numbers is you can drag your cursor inbetween each jump to get closer to the red line for guestimating. 

That Should be everything-- Justin Birdsall
